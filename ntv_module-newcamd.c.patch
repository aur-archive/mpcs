--- module-newcamd.c.orig	2008-12-12 20:17:14.000000000 +0200
+++ module-newcamd.c	2009-02-03 14:30:31.000000000 +0200
@@ -1,6 +1,6 @@
 #include "globals.h"
 
-#define CWS_NETMSGSIZE 256
+#define CWS_NETMSGSIZE 256+3
 
 typedef unsigned char uint8;
 typedef unsigned short uint16;
@@ -83,7 +83,9 @@
     return -1;
   netbuf[0] = (len - 2) >> 8;
   netbuf[1] = (len - 2) & 0xff;
-  return send(handle, netbuf, len, 0);
+  len=send(handle, netbuf, len, 0);
+  cs_debug("nms: send len=%d", len);
+  return len;
 }
 
 static int network_message_receive(int handle, uint16 *netMsgId, uint8 *buffer, 
@@ -96,7 +98,9 @@
   if (!buffer || handle < 0) 
     return -1;
   len = recv(handle, netbuf, 2, 0);
-  cs_debug("nmr(): len=%d, errno=%d", len, (len==-1)?errno:0);
+  cs_debug("nmr(): len=%d, errno=%d, netbuf=(%X|%X)->(%X), %d > %d", 
+    len, (len==-1)?errno:0,netbuf[0],netbuf[1],(netbuf[0] << 8),
+    ((netbuf[0] << 8) | netbuf[1]),(CWS_NETMSGSIZE - 2));
   if (!len) {
     cs_debug("nmr: 1 return 0");
     network_tcp_connection_close(handle);
@@ -107,8 +111,9 @@
     network_tcp_connection_close(handle);
     return -1;
   }
-  if (((netbuf[0] << 8) | netbuf[1]) > CWS_NETMSGSIZE - 2) {
-    cs_debug("nmr: 1 return -1");
+  if (((netbuf[0] << 8) | netbuf[1]) > CWS_NETMSGSIZE - 2 
+	/*&& (netbuf[0] << 8)<=256*/ ) {
+    cs_debug("nmr: 1 return -1, (%X | %X)",(netbuf[0] << 8) ,netbuf[1]);
     return -1;
   }
 
@@ -117,8 +122,9 @@
     cs_debug("nmr: 2 return 0");
     return 0;
   }
+  cs_debug("nmr(): 2 len=%d", len);  
   if (len != ((netbuf[0] << 8) | netbuf[1])) {
-    cs_debug("nmr: 2 return -1");
+    cs_debug("nmr: 2 return -1, (%X | %X)",(netbuf[0] << 8) ,netbuf[1]);
     return -1;
   }
   len += 2;
